========== [ START ] Decomposers Benchmark

===== Parameters
BENCHMARK TYPE               = decomposers
BENCHMARK TYPE UPPER CASE    = Decomposers
COMPUTE DIRECTORY            = /data/temporary/cejkaluk/2023-06-21_09-39-52
=====

---> Removing compiled benchmark files in /data/temporary/cejkaluk/2023-06-21_09-39-52/.local/bin and in build, and headers in /data/temporary/cejkaluk/2023-06-21_09-39-52/.local/include...
---> Compiling Decomposers Benchmark...
Configuring Decomposition for Release build ...
-- The C compiler identification is GNU 12.2.0
-- The CXX compiler identification is GNU 12.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /mnt/appl/software/GCCcore/12.2.0/bin/gcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /mnt/appl/software/GCCcore/12.2.0/bin/g++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for C++ include filesystem
-- Looking for C++ include filesystem - found
-- Performing Test CXX_FILESYSTEM_NO_LINK_NEEDED
-- Performing Test CXX_FILESYSTEM_NO_LINK_NEEDED - Success
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for a CUDA compiler
-- Looking for a CUDA compiler - /mnt/appl/software/CUDA/12.0.0/bin/nvcc
-- Looking for a CUDA host compiler - /mnt/appl/software/GCCcore/12.2.0/bin/g++
-- Found CUDAToolkit: /mnt/appl/software/CUDA/12.0.0/include (found version "12.0.76") 
-- The CUDA compiler identification is NVIDIA 12.0.76
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CUDA compiler: /mnt/appl/software/CUDA/12.0.0/bin/nvcc - skipped
-- Detecting CUDA compile features
-- Detecting CUDA compile features - done
-- Build options:
   DECOMP_USE_CUDA = yes
   CMAKE_CUDA_ARCHITECTURES = native
   DECOMP_USE_SYSTEM_GTEST= no
   DECOMP_BUILD_BENCHMARKS = yes
   DECOMP_BUILD_TESTS = no
   DECOMPO_BUILD_COVERAGE = no
   DECOMP_OFFLINE_BUILD = no
-- Compiler options:
   CMAKE_C_FLAGS = 
   CMAKE_C_FLAGS_DEBUG = -g
   CMAKE_C_FLAGS_RELEASE = -O3 -DNDEBUG
   CMAKE_CXX_FLAGS =  -Wall -Werror=vla -Wextra-semi -Wno-unknown-pragmas -Wno-maybe-uninitialized
   CMAKE_CXX_FLAGS_DEBUG = -g
   CMAKE_CXX_FLAGS_RELEASE = -O3 -DNDEBUG
   CMAKE_CUDA_FLAGS =  -Wall
   CMAKE_CUDA_FLAGS_DEBUG = -g
   CMAKE_CUDA_FLAGS_RELEASE = -O3 -DNDEBUG
   CMAKE_SHARED_LIBRARY_LINK_C_FLAGS = -rdynamic
   CMAKE_SHARED_LIBRARY_LINK_C_FLAGS_DEBUG = 
   CMAKE_SHARED_LIBRARY_LINK_C_FLAGS_RELEASE = 
   CMAKE_EXE_LINKER_FLAGS = 
   CMAKE_EXE_LINKER_FLAGS_DEBUG = 
   CMAKE_EXE_LINKER_FLAGS_RELEASE = 
   CMAKE_SHARED_LINKER_FLAGS = 
   CMAKE_SHARED_LINKER_FLAGS_DEBUG = 
   CMAKE_SHARED_LINKER_FLAGS_RELEASE = 
-- Configuring done
-- Generating done
-- Build files have been written to: /tmp/cejkaluk/2023-06-21_09-39-52/decomposition/build/Release
Building Decomposition in Release configuration using 64 parallel jobs ...
[ 33%] Building CUDA object src/Benchmarks/Decomposers/CMakeFiles/decomposers-benchmark.dir/decomposers-benchmark.cu.o
[ 33%] Building CUDA object src/Benchmarks/Solvers/CMakeFiles/solvers-benchmark.dir/solvers-benchmark.cu.o
[ 50%] Linking CUDA device code CMakeFiles/solvers-benchmark.dir/cmake_device_link.o
[ 66%] Linking CUDA executable ../../../bin/solvers-benchmark
[ 66%] Built target solvers-benchmark
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<float, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<float> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 8][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<float, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<float> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 16][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<float, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<float> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 32][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<double, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<double> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 8][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<double, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<double> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 16][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:[m[K In static member function ‘[01m[Kstatic void Decomposition::LU::Decomposers::IterativeCroutMethod<BLOCK_SIZE>::decompose(Matrix&, Matrix&, Vector&) [with Matrix = TNL::Matrices::DenseMatrix<double, TNL::Devices::Cuda, int, TNL::Algorithms::Segments::RowMajorOrder, TNL::Allocators::Cuda<double> >; Vector = TNL::Containers::Vector<int, TNL::Devices::Host, int, std::allocator<int> >; int BLOCK_SIZE = 32][m[K’:
[01m[K/tmp/cejkaluk/2023-06-21_09-39-52/decomposition/src/Decomposition/LU/Decomposers/IterativeCroutMethod.hpp:790:39:[m[K [01;35m[Kwarning: [m[Kargument 1 value ‘[01m[K18446744073709551608[m[K’ exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
  790 |       auto* streams = (cudaStrea[01;35m[Km_t*) malloc( nonDiagSecs_perRow * sizeof( cudaSt[m[Kream_t ) );
      |                                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/stdlib.h:539:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function ‘[01m[Kvoid* malloc(size_t)[m[K’ declared here
  539 | extern void *[01;36m[Kmalloc[m[K (size_t __size) __THROW __attribute_malloc__ __wur;
      |              [01;36m[K^~~~~~[m[K
[ 83%] Linking CUDA device code CMakeFiles/decomposers-benchmark.dir/cmake_device_link.o
[100%] Linking CUDA executable ../../../bin/decomposers-benchmark
[100%] Built target decomposers-benchmark
-- Install configuration: "Release"
-- Installing: /tmp/cejkaluk/2023-06-21_09-39-52/.local/lib64/cmake/DECOMP/DECOMPTargets.cmake
-- Installing: /tmp/cejkaluk/2023-06-21_09-39-52/.local/lib64/cmake/DECOMP/DECOMPConfig.cmake
-- Installing: /tmp/cejkaluk/2023-06-21_09-39-52/.local/lib64/cmake/DECOMP/Modules/FindFilesystem.cmake
-- Removing existing include directory: /tmp/cejkaluk/2023-06-21_09-39-52/.local/include/Decomposition/
-- Installing include directory: /tmp/cejkaluk/2023-06-21_09-39-52/.local/include/Decomposition/
-- Installing: /tmp/cejkaluk/2023-06-21_09-39-52/.local/bin/decomposers-benchmark
-- Installing: /tmp/cejkaluk/2023-06-21_09-39-52/.local/bin/solvers-benchmark

WARNING !!!

Your system does not see Decomposition which was installed right now.
You need to add it to your environment variables $PATH and $LD_LIBRARY_PATH.
Add the following to your shell configuration file (e.g. .bashrc):

export PATH="$PATH:/data/temporary/cejkaluk/2023-06-21_09-39-52/.local/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/data/temporary/cejkaluk/2023-06-21_09-39-52/.local/lib"

Total Installation time (incl. unit tests - if run): 0 min 57 sec 970 ms


===== [ START ] Benchmark (precision = double)

St čen 21 09:41:46 CEST 2023
-> Running benchmark for: ./mtx-matrices/685_bus/685_bus.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:110     1:34      2:35  
Row: 1 ->     0:31      1:112     2:44  
Row: 2 ->     0:33      1:44      2:89  
Total iterations = 532
Pivots per section = [ 0, 0, 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:110     1:34      2:35  
Row: 1 ->     0:31      1:112     2:44  
Row: 2 ->     0:33      1:44      2:89  
Total iterations = 532
Pivots per section = [ 0, 0, 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                     685_bus.mtx        double           685           685          3249                       ICM_32 PP           GPU  4.217423e-02           nan           nan     1           N/A        1.005022e+04            1.818989e-12


St čen 21 09:41:48 CEST 2023
-> Running benchmark for: ./mtx-matrices/b2_ss/b2_ss.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:353     1:3       2:4       3:3       4:4   
Row: 1 ->     0:274     1:389     2:6       3:11      4:10  
Row: 2 ->     0:272     1:300     2:510     3:22      4:8   
Row: 3 ->     0:295     1:337     2:318     3:527     4:27  
Row: 4 ->     0:288     1:282     2:283     3:346     4:124 
Total iterations = 4996
Pivots per section = [ 256, 256, 240, 246, 50 ]
Total pivots = 1048
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:353     1:3       2:4       3:3       4:4   
Row: 1 ->     0:274     1:389     2:6       3:11      4:10  
Row: 2 ->     0:272     1:300     2:510     3:22      4:8   
Row: 3 ->     0:295     1:337     2:318     3:527     4:27  
Row: 4 ->     0:288     1:282     2:283     3:346     4:124 
Total iterations = 4996
Pivots per section = [ 256, 256, 240, 246, 50 ]
Total pivots = 1048
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                       b2_ss.mtx        double          1089          1089          3895                       ICM_32 PP           GPU  3.892479e-01           nan           nan     1           N/A        4.709386e+06            5.820766e-11


St čen 21 09:41:56 CEST 2023
-> Running benchmark for: ./mtx-matrices/bayer06/bayer06.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:356     1:3       2:3       3:3       4:3       5:3       6:3       7:1       8:1       9:1   
Row: 1 ->     0:320     1:610     2:22      3:14      4:1       5:14      6:3       7:1       8:1       9:1   
Row: 2 ->     0:320     1:320     2:626     3:36      4:8       5:13      6:14      7:1       8:1       9:1   
Row: 3 ->     0:320     1:320     2:320     3:618     4:16      5:6       6:16      7:1       8:1       9:1   
Row: 4 ->     0:320     1:320     2:320     3:444     4:695     5:16      6:25      7:1       8:1       9:1   
Row: 5 ->     0:320     1:320     2:320     3:481     4:476     5:779     6:31      7:20      8:13      9:1   
Row: 6 ->     0:320     1:320     2:564     3:496     4:436     5:484     6:527     7:14      8:15      9:14  
Row: 7 ->     0:320     1:549     2:587     3:461     4:436     5:483     6:485     7:419     8:2       9:1   
Row: 8 ->     0:321     1:579     2:432     3:461     4:436     5:483     6:491     7:335     8:400     9:1   
Row: 9 ->     0:354     1:332     2:350     3:461     4:512     5:593     6:492     7:328     8:351     9:160 
Total iterations = 24032
Pivots per section = [ 320, 320, 320, 320, 311, 313, 320, 319, 317, 122 ]
Total pivots = 2982
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:356     1:3       2:3       3:3       4:3       5:3       6:3       7:1       8:1       9:1   
Row: 1 ->     0:320     1:610     2:22      3:14      4:1       5:14      6:3       7:1       8:1       9:1   
Row: 2 ->     0:320     1:320     2:626     3:36      4:8       5:13      6:14      7:1       8:1       9:1   
Row: 3 ->     0:320     1:320     2:320     3:618     4:16      5:6       6:16      7:1       8:1       9:1   
Row: 4 ->     0:320     1:320     2:320     3:444     4:695     5:16      6:25      7:1       8:1       9:1   
Row: 5 ->     0:320     1:320     2:320     3:481     4:476     5:779     6:31      7:20      8:13      9:1   
Row: 6 ->     0:320     1:320     2:564     3:496     4:436     5:484     6:527     7:14      8:15      9:14  
Row: 7 ->     0:320     1:549     2:587     3:461     4:436     5:483     6:485     7:419     8:2       9:1   
Row: 8 ->     0:321     1:579     2:432     3:461     4:436     5:483     6:491     7:335     8:400     9:1   
Row: 9 ->     0:354     1:332     2:350     3:461     4:512     5:593     6:492     7:328     8:351     9:160 
Total iterations = 24032
Pivots per section = [ 320, 320, 320, 320, 311, 313, 320, 319, 317, 122 ]
Total pivots = 2982
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                     bayer06.mtx        double          3008          3008         20715                       ICM_32 PP           GPU  2.418627e+00           nan           nan     1           N/A        3.745246e+15            1.192093e-07


St čen 21 09:44:39 CEST 2023
-> Running benchmark for: ./mtx-matrices/bayer09/bayer09.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:358     1:3       2:3       3:2       4:2       5:2       6:2       7:2       8:3       9:3   
Row: 1 ->     0:322     1:462     2:2       3:1       4:1       5:1       6:1       7:5       8:3       9:1   
Row: 2 ->     0:320     1:320     2:482     3:5       4:1       5:1       6:4       7:2       8:3       9:1   
Row: 3 ->     0:320     1:320     2:320     3:601     4:2       5:1       6:22      7:12      8:1       9:1   
Row: 4 ->     0:320     1:320     2:320     3:320     4:606     5:18      6:20      7:1       8:1       9:1   
Row: 5 ->     0:320     1:320     2:320     3:367     4:420     5:672     6:25      7:12      8:16      9:1   
Row: 6 ->     0:320     1:320     2:322     3:467     4:313     5:403     6:640     7:15      8:14      9:3   
Row: 7 ->     0:321     1:320     2:371     3:420     4:313     5:371     6:462     7:688     8:25      9:24  
Row: 8 ->     0:320     1:386     2:337     3:320     4:313     5:313     6:318     7:492     8:596     9:22  
Row: 9 ->     0:336     1:374     2:320     3:320     4:313     5:313     6:318     7:442     8:519     9:382 
Total iterations = 21504
Pivots per section = [ 320, 320, 320, 320, 313, 313, 318, 313, 319, 197 ]
Total pivots = 3053
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:358     1:3       2:3       3:2       4:2       5:2       6:2       7:2       8:3       9:3   
Row: 1 ->     0:322     1:462     2:2       3:1       4:1       5:1       6:1       7:5       8:3       9:1   
Row: 2 ->     0:320     1:320     2:482     3:5       4:1       5:1       6:4       7:2       8:3       9:1   
Row: 3 ->     0:320     1:320     2:320     3:601     4:2       5:1       6:22      7:12      8:1       9:1   
Row: 4 ->     0:320     1:320     2:320     3:320     4:606     5:18      6:20      7:1       8:1       9:1   
Row: 5 ->     0:320     1:320     2:320     3:367     4:420     5:672     6:25      7:12      8:16      9:1   
Row: 6 ->     0:320     1:320     2:322     3:467     4:313     5:403     6:640     7:15      8:14      9:3   
Row: 7 ->     0:321     1:320     2:371     3:420     4:313     5:371     6:462     7:688     8:25      9:24  
Row: 8 ->     0:320     1:386     2:337     3:320     4:313     5:313     6:318     7:492     8:596     9:22  
Row: 9 ->     0:336     1:374     2:320     3:320     4:313     5:313     6:318     7:442     8:519     9:382 
Total iterations = 21504
Pivots per section = [ 320, 320, 320, 320, 313, 313, 318, 313, 319, 197 ]
Total pivots = 3053
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                     bayer09.mtx        double          3083          3083         11767                       ICM_32 PP           GPU  2.455271e+00           nan           nan     1           N/A        1.212852e+11            1.192093e-07


St čen 21 09:47:31 CEST 2023
-> Running benchmark for: ./mtx-matrices/bcsstk01/bcsstk01.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:130 
Total iterations = 130
Pivots per section = [ 43 ]
Total pivots = 43
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:130 
Total iterations = 130
Pivots per section = [ 43 ]
Total pivots = 43
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    bcsstk01.mtx        double            48            48           400                       ICM_32 PP           GPU  8.104756e-03           nan           nan     1           N/A        2.813294e+09            2.875458e-07


St čen 21 09:47:31 CEST 2023
-> Running benchmark for: ./mtx-matrices/bcsstk02/bcsstk02.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:103 
Total iterations = 103
Pivots per section = [ 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:103 
Total iterations = 103
Pivots per section = [ 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    bcsstk02.mtx        double            66            66          4356                       ICM_32 PP           GPU  4.628952e-03           nan           nan     1           N/A        5.295414e+03            1.818989e-12


St čen 21 09:47:32 CEST 2023
-> Running benchmark for: ./mtx-matrices/bcsstk03/bcsstk03.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:276 
Total iterations = 276
Pivots per section = [ 110 ]
Total pivots = 110
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:276 
Total iterations = 276
Pivots per section = [ 110 ]
Total pivots = 110
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    bcsstk03.mtx        double           112           112           640                       ICM_32 PP           GPU  1.825432e-02           nan           nan     1           N/A        3.648941e+11            7.629395e-06


St čen 21 09:47:33 CEST 2023
-> Running benchmark for: ./mtx-matrices/bp_0/bp_0.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:255     1:1       2:1       3:1   
Row: 1 ->     0:255     1:312     2:2       3:2   
Row: 2 ->     0:255     1:255     2:308     3:2   
Row: 3 ->     0:255     1:255     2:252     3:59  
Total iterations = 2470
Pivots per section = [ 255, 255, 252, 50 ]
Total pivots = 812
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:255     1:1       2:1       3:1   
Row: 1 ->     0:255     1:312     2:2       3:2   
Row: 2 ->     0:255     1:255     2:308     3:2   
Row: 3 ->     0:255     1:255     2:252     3:59  
Total iterations = 2470
Pivots per section = [ 255, 255, 252, 50 ]
Total pivots = 812
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                        bp_0.mtx        double           822           822          3276                       ICM_32 PP           GPU  1.934303e-01           nan           nan     1           N/A        2.389500e+02            1.776357e-15


St čen 21 09:47:37 CEST 2023
-> Running benchmark for: ./mtx-matrices/bp_1400/bp_1400.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:395     1:8       2:7       3:7   
Row: 1 ->     0:318     1:460     2:16      3:15  
Row: 2 ->     0:309     1:415     2:571     3:106 
Row: 3 ->     0:281     1:348     2:449     3:123 
Total iterations = 3828
Pivots per section = [ 254, 251, 211, 31 ]
Total pivots = 747
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:395     1:8       2:7       3:7   
Row: 1 ->     0:318     1:460     2:16      3:15  
Row: 2 ->     0:309     1:415     2:571     3:106 
Row: 3 ->     0:281     1:348     2:449     3:123 
Total iterations = 3828
Pivots per section = [ 254, 251, 211, 31 ]
Total pivots = 747
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                     bp_1400.mtx        double           822           822          4790                       ICM_32 PP           GPU  2.690392e-01           nan           nan     1           N/A        1.241452e+05            3.092282e-11


St čen 21 09:47:42 CEST 2023
-> Running benchmark for: ./mtx-matrices/c-22/c-22.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1       1:1       2:1       3:1       4:1       5:2       6:2       7:2       8:2       9:2   
Row: 1 ->     0:1       1:1       2:1       3:1       4:1       5:2       6:2       7:2       8:2       9:2   
Row: 2 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:2       7:2       8:1       9:1   
Row: 3 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:1       7:2       8:2       9:1   
Row: 4 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:1       7:1       8:2       9:2   
Row: 5 ->     0:1       1:1       2:1       3:1       4:1       5:181     6:15      7:15      8:15      9:16  
Row: 6 ->     0:1       1:1       2:1       3:1       4:1       5:15      6:391     7:69      8:69      9:69  
Row: 7 ->     0:1       1:1       2:1       3:1       4:1       5:16      6:70      7:397     8:88      9:87  
Row: 8 ->     0:1       1:1       2:1       3:1       4:1       5:15      6:68      7:88      8:398     9:114 
Row: 9 ->     0:1       1:1       2:1       3:1       4:1       5:16      6:68      7:86      8:114     9:339 
Total iterations = 2910
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1       1:1       2:1       3:1       4:1       5:2       6:2       7:2       8:2       9:2   
Row: 1 ->     0:1       1:1       2:1       3:1       4:1       5:2       6:2       7:2       8:2       9:2   
Row: 2 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:2       7:2       8:1       9:1   
Row: 3 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:1       7:2       8:2       9:1   
Row: 4 ->     0:1       1:1       2:1       3:1       4:1       5:1       6:1       7:1       8:2       9:2   
Row: 5 ->     0:1       1:1       2:1       3:1       4:1       5:181     6:15      7:15      8:15      9:16  
Row: 6 ->     0:1       1:1       2:1       3:1       4:1       5:15      6:391     7:69      8:69      9:69  
Row: 7 ->     0:1       1:1       2:1       3:1       4:1       5:16      6:70      7:397     8:88      9:87  
Row: 8 ->     0:1       1:1       2:1       3:1       4:1       5:15      6:68      7:88      8:398     9:114 
Row: 9 ->     0:1       1:1       2:1       3:1       4:1       5:16      6:68      7:86      8:114     9:339 
Total iterations = 2910
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                        c-22.mtx        double          3792          3792         28870                       ICM_32 PP           GPU  1.314534e+00           nan           nan     1           N/A        3.625237e+03            4.441720e-12


St čen 21 09:48:25 CEST 2023
-> Running benchmark for: ./mtx-matrices/circuit204/circuit204.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:243     1:32      2:21      3:21  
Row: 1 ->     0:174     1:308     2:32      3:32  
Row: 2 ->     0:174     1:220     2:322     3:31  
Row: 3 ->     0:179     1:218     2:230     3:194 
Total iterations = 2431
Pivots per section = [ 51, 61, 69, 21 ]
Total pivots = 202
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:243     1:32      2:21      3:21  
Row: 1 ->     0:174     1:308     2:32      3:32  
Row: 2 ->     0:174     1:220     2:322     3:31  
Row: 3 ->     0:179     1:218     2:230     3:194 
Total iterations = 2431
Pivots per section = [ 51, 61, 69, 21 ]
Total pivots = 202
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                  circuit204.mtx        double          1020          1020          5883                       ICM_32 PP           GPU  1.683051e-01           nan           nan     1           N/A        3.131398e+08            8.295274e-08


St čen 21 09:48:28 CEST 2023
-> Running benchmark for: ./mtx-matrices/crout_python/crout_python.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:8   
Total iterations = 8
Pivots per section = [ 1 ]
Total pivots = 1
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:8   
Total iterations = 8
Pivots per section = [ 1 ]
Total pivots = 1
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                crout_python.mtx        double             4             4            15                       ICM_32 PP           GPU  4.599860e-04           nan           nan     1           N/A        7.527778e+00            0.000000e+00


St čen 21 09:48:29 CEST 2023
-> Running benchmark for: ./mtx-matrices/exdata_1/exdata_1.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:185     1:1       2:1       3:1       4:2       5:2       6:1       7:2       8:2       9:1   
Row: 1 ->     0:185     1:193     2:1       3:1       4:1       5:2       6:2       7:1       8:2       9:2   
Row: 2 ->     0:185     1:193     2:547     3:193     4:193     5:171     6:2       7:186     8:1       9:2   
Row: 3 ->     0:185     1:193     2:281     3:843     4:278     5:268     6:147     7:278     8:247     9:1   
Row: 4 ->     0:185     1:193     2:280     3:272     4:830     5:232     6:222     7:232     8:223     9:209 
Row: 5 ->     0:185     1:193     2:255     3:269     4:231     5:888     6:106     7:114     8:114     9:110 
Row: 6 ->     0:185     1:193     2:88      3:136     4:223     5:266     6:894     7:110     8:114     9:108 
Row: 7 ->     0:185     1:193     2:274     3:274     4:227     5:282     6:162     7:992     8:63      9:73  
Row: 8 ->     0:185     1:193     2:88      3:245     4:223     5:278     6:171     7:519     8:1116    9:13  
Row: 9 ->     0:185     1:193     2:88      3:1       4:199     5:265     6:171     7:523     8:728     9:990 
Total iterations = 21741
Pivots per section = [ 185, 193, 87, 0, 0, 7, 2, 112, 194, 170 ]
Total pivots = 950
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:185     1:1       2:1       3:1       4:2       5:2       6:1       7:2       8:2       9:1   
Row: 1 ->     0:185     1:193     2:1       3:1       4:1       5:2       6:2       7:1       8:2       9:2   
Row: 2 ->     0:185     1:193     2:547     3:193     4:193     5:171     6:2       7:186     8:1       9:2   
Row: 3 ->     0:185     1:193     2:281     3:843     4:278     5:268     6:147     7:278     8:247     9:1   
Row: 4 ->     0:185     1:193     2:280     3:272     4:830     5:232     6:222     7:232     8:223     9:209 
Row: 5 ->     0:185     1:193     2:255     3:269     4:231     5:888     6:106     7:114     8:114     9:110 
Row: 6 ->     0:185     1:193     2:88      3:136     4:223     5:266     6:894     7:110     8:114     9:108 
Row: 7 ->     0:185     1:193     2:274     3:274     4:227     5:282     6:162     7:992     8:63      9:73  
Row: 8 ->     0:185     1:193     2:88      3:245     4:223     5:278     6:171     7:519     8:1116    9:13  
Row: 9 ->     0:185     1:193     2:88      3:1       4:199     5:265     6:171     7:523     8:728     9:990 
Total iterations = 21741
Pivots per section = [ 185, 193, 87, 0, 0, 7, 2, 112, 194, 170 ]
Total pivots = 950
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    exdata_1.mtx        double          6001          6001       2269500                       ICM_32 PP           GPU  1.501111e+01           nan           nan     1           N/A        3.584281e+08            1.062118e-08


St čen 21 09:53:07 CEST 2023
-> Running benchmark for: ./mtx-matrices/fp/fp.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:971     1:136     2:137     3:133     4:129     5:106     6:130     7:137     8:119     9:135 
Row: 1 ->     0:634     1:71      2:56      3:50      4:55      5:55      6:56      7:55      8:57      9:52  
Row: 2 ->     0:629     1:79      2:59      3:47      4:51      5:47      6:47      7:49      8:49      9:38  
Row: 3 ->     0:551     1:47      2:55      3:266     4:48      5:48      6:52      7:53      8:48      9:48  
Row: 4 ->     0:588     1:80      2:58      3:63      4:404     5:48      6:66      7:69      8:57      9:56  
Row: 5 ->     0:512     1:69      2:57      3:48      4:72      5:119     6:68      7:65      8:65      9:66  
Row: 6 ->     0:600     1:78      2:53      3:62      4:76      5:74      6:74      7:65      8:64      9:58  
Row: 7 ->     0:630     1:78      2:55      3:63      4:76      5:75      6:72      7:93      8:77      9:72  
Row: 8 ->     0:557     1:79      2:59      3:49      4:70      5:76      6:73      7:66      8:91      9:58  
Row: 9 ->     0:571     1:73      2:47      3:62      4:64      5:70      6:63      7:76      8:77      9:706 
Total iterations = 13697
Pivots per section = [ 233, 0, 0, 0, 0, 0, 0, 0, 0, 2 ]
Total pivots = 235
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:971     1:136     2:137     3:133     4:129     5:106     6:130     7:137     8:119     9:135 
Row: 1 ->     0:634     1:71      2:56      3:50      4:55      5:55      6:56      7:55      8:57      9:52  
Row: 2 ->     0:629     1:79      2:59      3:47      4:51      5:47      6:47      7:49      8:49      9:38  
Row: 3 ->     0:551     1:47      2:55      3:266     4:48      5:48      6:52      7:53      8:48      9:48  
Row: 4 ->     0:588     1:80      2:58      3:63      4:404     5:48      6:66      7:69      8:57      9:56  
Row: 5 ->     0:512     1:69      2:57      3:48      4:72      5:119     6:68      7:65      8:65      9:66  
Row: 6 ->     0:600     1:78      2:53      3:62      4:76      5:74      6:74      7:65      8:64      9:58  
Row: 7 ->     0:630     1:78      2:55      3:63      4:76      5:75      6:72      7:93      8:77      9:72  
Row: 8 ->     0:557     1:79      2:59      3:49      4:70      5:76      6:73      7:66      8:91      9:58  
Row: 9 ->     0:571     1:73      2:47      3:62      4:64      5:70      6:63      7:76      8:77      9:706 
Total iterations = 13697
Pivots per section = [ 233, 0, 0, 0, 0, 0, 0, 0, 0, 2 ]
Total pivots = 235
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                          fp.mtx        double          7548          7548        834222                       ICM_32 PP           GPU  1.040473e+01           nan           nan     1           N/A        1.939503e+03            4.547474e-13


St čen 21 09:59:09 CEST 2023
-> Running benchmark for: ./mtx-matrices/freeFlyingRobot_9/freeFlyingRobot_9.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:45      1:1       2:2       3:2       4:2       5:2       6:2       7:2       8:1       9:1   
Row: 1 ->     0:45      1:1       2:2       3:2       4:2       5:2       6:2       7:2       8:2       9:1   
Row: 2 ->     0:45      1:1       2:20      3:2       4:2       5:1       6:2       7:2       8:2       9:1   
Row: 3 ->     0:45      1:1       2:22      3:762     4:4       5:1       6:4       7:4       8:4       9:3   
Row: 4 ->     0:45      1:1       2:22      3:774     4:863     5:1       6:3       7:3       8:3       9:3   
Row: 5 ->     0:45      1:1       2:11      3:387     4:437     5:26      6:7       7:16      8:2       9:2   
Row: 6 ->     0:45      1:1       2:22      3:421     4:466     5:7       6:902     7:239     8:226     9:19  
Row: 7 ->     0:45      1:1       2:22      3:774     4:872     5:16      6:239     7:956     8:480     9:480 
Row: 8 ->     0:45      1:1       2:11      3:766     4:872     5:1       6:226     7:480     8:935     9:477 
Row: 9 ->     0:45      1:1       2:11      3:586     4:865     5:1       6:19      7:480     8:477     9:464 
Total iterations = 16697
Pivots per section = [ 44, 0, 11, 387, 436, 0, 0, 0, 0, 0 ]
Total pivots = 878
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:45      1:1       2:2       3:2       4:2       5:2       6:2       7:2       8:1       9:1   
Row: 1 ->     0:45      1:1       2:2       3:2       4:2       5:2       6:2       7:2       8:2       9:1   
Row: 2 ->     0:45      1:1       2:20      3:2       4:2       5:1       6:2       7:2       8:2       9:1   
Row: 3 ->     0:45      1:1       2:22      3:762     4:4       5:1       6:4       7:4       8:4       9:3   
Row: 4 ->     0:45      1:1       2:22      3:774     4:863     5:1       6:3       7:3       8:3       9:3   
Row: 5 ->     0:45      1:1       2:11      3:387     4:437     5:26      6:7       7:16      8:2       9:2   
Row: 6 ->     0:45      1:1       2:22      3:421     4:466     5:7       6:902     7:239     8:226     9:19  
Row: 7 ->     0:45      1:1       2:22      3:774     4:872     5:16      6:239     7:956     8:480     9:480 
Row: 8 ->     0:45      1:1       2:11      3:766     4:872     5:1       6:226     7:480     8:935     9:477 
Row: 9 ->     0:45      1:1       2:11      3:586     4:865     5:1       6:19      7:480     8:477     9:464 
Total iterations = 16697
Pivots per section = [ 44, 0, 11, 387, 436, 0, 0, 0, 0, 0 ]
Total pivots = 878
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
           freeFlyingRobot_9.mtx        double          4778          4778         39964                       ICM_32 PP           GPU  7.589430e+00           nan           nan     1           N/A        2.285634e+09            1.196750e-07


St čen 21 10:01:07 CEST 2023
-> Running benchmark for: ./mtx-matrices/garon1/garon1.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:45      1:49      2:43      3:34      4:49      5:49      6:45      7:36      8:49      9:49  
Row: 1 ->     0:48      1:124     2:88      3:89      4:103     5:103     6:92      7:88      8:94      9:95  
Row: 2 ->     0:41      1:91      2:127     3:84      4:107     5:100     6:105     7:88      8:94      9:93  
Row: 3 ->     0:33      1:91      2:84      3:307     4:89      5:87      6:84      7:90      8:83      9:83  
Row: 4 ->     0:47      1:100     2:102     3:88      4:60      5:55      6:47      7:50      8:51      9:50  
Row: 5 ->     0:47      1:97      2:99      3:86      4:52      5:239     6:60      7:58      8:64      9:63  
Row: 6 ->     0:43      1:97      2:102     3:84      4:50      5:62      6:368     7:68      8:74      9:77  
Row: 7 ->     0:36      1:90      2:87      3:85      4:49      5:59      6:68      7:264     8:64      9:68  
Row: 8 ->     0:46      1:91      2:95      3:82      4:51      5:60      6:71      7:66      8:116     9:49  
Row: 9 ->     0:47      1:93      2:94      3:84      4:48      5:60      6:69      7:66      8:49      9:306 
Total iterations = 8386
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]
Total pivots = 1
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:45      1:49      2:43      3:34      4:49      5:49      6:45      7:36      8:49      9:49  
Row: 1 ->     0:48      1:124     2:88      3:89      4:103     5:103     6:92      7:88      8:94      9:95  
Row: 2 ->     0:41      1:91      2:127     3:84      4:107     5:100     6:105     7:88      8:94      9:93  
Row: 3 ->     0:33      1:91      2:84      3:307     4:89      5:87      6:84      7:90      8:83      9:83  
Row: 4 ->     0:47      1:100     2:102     3:88      4:60      5:55      6:47      7:50      8:51      9:50  
Row: 5 ->     0:47      1:97      2:99      3:86      4:52      5:239     6:60      7:58      8:64      9:63  
Row: 6 ->     0:43      1:97      2:102     3:84      4:50      5:62      6:368     7:68      8:74      9:77  
Row: 7 ->     0:36      1:90      2:87      3:85      4:49      5:59      6:68      7:264     8:64      9:68  
Row: 8 ->     0:46      1:91      2:95      3:82      4:51      5:60      6:71      7:66      8:116     9:49  
Row: 9 ->     0:47      1:93      2:94      3:84      4:48      5:60      6:69      7:66      8:49      9:306 
Total iterations = 8386
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]
Total pivots = 1
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                      garon1.mtx        double          3175          3175         84723                       ICM_32 PP           GPU  1.031549e+00           nan           nan     1           N/A        1.303015e+01            3.552714e-15


St čen 21 10:01:44 CEST 2023
-> Running benchmark for: ./mtx-matrices/heart1/heart1.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:557     1:108     2:1       3:106     4:111     5:97      6:99      7:1       8:92      9:51  
Row: 1 ->     0:135     1:534     2:99      3:100     4:95      5:101     6:93      7:41      8:102     9:97  
Row: 2 ->     0:2       1:91      2:438     3:90      4:85      5:86      6:96      7:96      8:100     9:93  
Row: 3 ->     0:131     1:100     2:88      3:568     4:84      5:88      6:98      7:92      8:90      9:89  
Row: 4 ->     0:132     1:102     2:84      3:85      4:544     5:91      6:88      7:85      8:96      9:94  
Row: 5 ->     0:121     1:97      2:87      3:88      4:95      5:554     6:82      7:82      8:82      9:77  
Row: 6 ->     0:128     1:95      2:93      3:96      4:89      5:80      6:551     7:91      8:89      9:89  
Row: 7 ->     0:2       1:39      2:90      3:93      4:90      5:80      6:117     7:586     8:100     9:92  
Row: 8 ->     0:114     1:95      2:94      3:90      4:90      5:77      6:117     7:94      8:510     9:87  
Row: 9 ->     0:47      1:97      2:86      3:91      4:87      5:81      6:116     7:93      8:88      9:131 
Total iterations = 12966
Pivots per section = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 ]
Total pivots = 2
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:557     1:108     2:1       3:106     4:111     5:97      6:99      7:1       8:92      9:51  
Row: 1 ->     0:135     1:534     2:99      3:100     4:95      5:101     6:93      7:41      8:102     9:97  
Row: 2 ->     0:2       1:91      2:438     3:90      4:85      5:86      6:96      7:96      8:100     9:93  
Row: 3 ->     0:131     1:100     2:88      3:568     4:84      5:88      6:98      7:92      8:90      9:89  
Row: 4 ->     0:132     1:102     2:84      3:85      4:544     5:91      6:88      7:85      8:96      9:94  
Row: 5 ->     0:121     1:97      2:87      3:88      4:95      5:554     6:82      7:82      8:82      9:77  
Row: 6 ->     0:128     1:95      2:93      3:96      4:89      5:80      6:551     7:91      8:89      9:89  
Row: 7 ->     0:2       1:39      2:90      3:93      4:90      5:80      6:117     7:586     8:100     9:92  
Row: 8 ->     0:114     1:95      2:94      3:90      4:90      5:77      6:117     7:94      8:510     9:87  
Row: 9 ->     0:47      1:97      2:86      3:91      4:87      5:81      6:116     7:93      8:88      9:131 
Total iterations = 12966
Pivots per section = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 ]
Total pivots = 2
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                      heart1.mtx        double          3557          3557       1385317                       ICM_32 PP           GPU  2.854697e+00           nan           nan     1           N/A        5.149922e+05            1.164153e-10


St čen 21 10:02:30 CEST 2023
-> Running benchmark for: ./mtx-matrices/lns_131/lns_131.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:89  
Total iterations = 89
Pivots per section = [ 15 ]
Total pivots = 15
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:89  
Total iterations = 89
Pivots per section = [ 15 ]
Total pivots = 15
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                     lns_131.mtx        double           131           131           536                       ICM_32 PP           GPU  5.557521e-03           nan           nan     1           N/A        2.094355e+13            3.906250e-03


St čen 21 10:02:31 CEST 2023
-> Running benchmark for: ./mtx-matrices/msc10848/msc10848.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2693    1:29      2:22      3:28      4:28      5:26      6:22      7:22      8:22      9:21     10:13  
Row: 1 ->     0:1347    1:2951    2:44      3:44      4:43      5:41      6:42      7:38      8:38      9:38     10:27  
Row: 2 ->     0:1513    1:1643    2:2931    3:44      4:44      5:47      6:46      7:37      8:26      9:31     10:27  
Row: 3 ->     0:1406    1:1686    2:1733    3:2896    4:59      5:58      6:30      7:52      8:52      9:26     10:25  
Row: 4 ->     0:1433    1:1626    2:1800    3:1636    4:2990    5:43      6:35      7:46      8:41      9:44     10:31  
Row: 5 ->     0:1410    1:1573    2:1760    3:1851    4:1760    5:3010    6:53      7:54      8:54      9:40     10:47  
Row: 6 ->     0:1318    1:1454    2:1600    3:1407    4:1626    5:1793    6:3046    7:57      8:45      9:53     10:48  
Row: 7 ->     0:1295    1:1420    2:1587    3:1598    4:1787    5:1841    6:1844    7:3048    8:65      9:69     10:64  
Row: 8 ->     0:1273    1:1378    2:1497    3:1606    4:1879    5:1889    6:1862    7:2048    8:3056    9:107    10:102 
Row: 9 ->     0:1268    1:1322    2:1365    3:1410    4:1611    5:1867    6:1907    7:2048    8:2048    9:3068   10:148 
Row: 10 ->     0:1172    1:1224    2:1369    3:1342    4:1447    5:1582    6:1544    7:1674    8:1900    9:2048   10:1823
Total iterations = 122277
Pivots per section = [ 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 607 ]
Total pivots = 10847
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2693    1:29      2:22      3:28      4:28      5:26      6:22      7:22      8:22      9:21     10:13  
Row: 1 ->     0:1347    1:2951    2:44      3:44      4:43      5:41      6:42      7:38      8:38      9:38     10:27  
Row: 2 ->     0:1513    1:1643    2:2931    3:44      4:44      5:47      6:46      7:37      8:26      9:31     10:27  
Row: 3 ->     0:1406    1:1686    2:1733    3:2896    4:59      5:58      6:30      7:52      8:52      9:26     10:25  
Row: 4 ->     0:1433    1:1626    2:1800    3:1636    4:2990    5:43      6:35      7:46      8:41      9:44     10:31  
Row: 5 ->     0:1410    1:1573    2:1760    3:1851    4:1760    5:3010    6:53      7:54      8:54      9:40     10:47  
Row: 6 ->     0:1318    1:1454    2:1600    3:1407    4:1626    5:1793    6:3046    7:57      8:45      9:53     10:48  
Row: 7 ->     0:1295    1:1420    2:1587    3:1598    4:1787    5:1841    6:1844    7:3048    8:65      9:69     10:64  
Row: 8 ->     0:1273    1:1378    2:1497    3:1606    4:1879    5:1889    6:1862    7:2048    8:3056    9:107    10:102 
Row: 9 ->     0:1268    1:1322    2:1365    3:1410    4:1611    5:1867    6:1907    7:2048    8:2048    9:3068   10:148 
Row: 10 ->     0:1172    1:1224    2:1369    3:1342    4:1447    5:1582    6:1544    7:1674    8:1900    9:2048   10:1823
Total iterations = 122277
Pivots per section = [ 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 607 ]
Total pivots = 10847
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    msc10848.mtx        double         10848         10848       1229776                       ICM_32 PP           GPU  2.317402e+02           nan           nan     1           N/A        5.921974e+11            3.051758e-05


St čen 21 10:33:17 CEST 2023
-> Running benchmark for: ./mtx-matrices/nd3k/nd3k.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1110    1:538     2:536     3:541     4:531     5:544     6:543     7:551     8:551     9:529 
Row: 1 ->     0:536     1:1089    2:491     3:496     4:495     5:493     6:491     7:495     8:492     9:497 
Row: 2 ->     0:531     1:497     2:1092    3:506     4:505     5:502     6:502     7:505     8:505     9:506 
Row: 3 ->     0:538     1:497     2:510     3:1096    4:535     5:532     6:527     7:531     8:533     9:529 
Row: 4 ->     0:529     1:496     2:509     3:535     4:1081    5:506     6:506     7:508     8:506     9:505 
Row: 5 ->     0:541     1:495     2:504     3:535     4:507     5:1112    6:533     7:533     8:535     9:533 
Row: 6 ->     0:547     1:493     2:504     3:531     4:505     5:533     6:1098    7:526     8:526     9:523 
Row: 7 ->     0:545     1:497     2:505     3:530     4:506     5:532     6:528     7:1108    8:541     9:539 
Row: 8 ->     0:546     1:494     2:504     3:532     4:505     5:532     6:527     7:541     8:1101    9:537 
Row: 9 ->     0:530     1:493     2:503     3:534     4:519     5:533     6:531     7:544     8:537     9:785 
Total iterations = 57482
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1110    1:538     2:536     3:541     4:531     5:544     6:543     7:551     8:551     9:529 
Row: 1 ->     0:536     1:1089    2:491     3:496     4:495     5:493     6:491     7:495     8:492     9:497 
Row: 2 ->     0:531     1:497     2:1092    3:506     4:505     5:502     6:502     7:505     8:505     9:506 
Row: 3 ->     0:538     1:497     2:510     3:1096    4:535     5:532     6:527     7:531     8:533     9:529 
Row: 4 ->     0:529     1:496     2:509     3:535     4:1081    5:506     6:506     7:508     8:506     9:505 
Row: 5 ->     0:541     1:495     2:504     3:535     4:507     5:1112    6:533     7:533     8:535     9:533 
Row: 6 ->     0:547     1:493     2:504     3:531     4:505     5:533     6:1098    7:526     8:526     9:523 
Row: 7 ->     0:545     1:497     2:505     3:530     4:506     5:532     6:528     7:1108    8:541     9:539 
Row: 8 ->     0:546     1:494     2:504     3:532     4:505     5:532     6:527     7:541     8:1101    9:537 
Row: 9 ->     0:530     1:493     2:503     3:534     4:519     5:533     6:531     7:544     8:537     9:785 
Total iterations = 57482
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                        nd3k.mtx        double          9000          9000       3279690                       ICM_32 PP           GPU  1.083692e+02           nan           nan     1           N/A        6.068903e+01            1.421085e-14


St čen 21 10:46:21 CEST 2023
-> Running benchmark for: ./mtx-matrices/orani678/orani678.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:274     1:116     2:104     3:75      4:48      5:116     6:1       7:118     8:7       9:114 
Row: 1 ->     0:176     1:624     2:26      3:25      4:25      5:28      6:25      7:26      8:26      9:25  
Row: 2 ->     0:176     1:436     2:746     3:53      4:53      5:54      6:52      7:52      8:55      9:51  
Row: 3 ->     0:176     1:436     2:494     3:719     4:45      5:45      6:44      7:45      8:44      9:43  
Row: 4 ->     0:176     1:436     2:494     3:495     4:697     5:44      6:41      7:43      8:41      9:41  
Row: 5 ->     0:39      1:367     2:494     3:495     4:478     5:614     6:94      7:100     8:95      9:95  
Row: 6 ->     0:39      1:367     2:494     3:495     4:478     5:416     6:615     7:109     8:110     9:109 
Row: 7 ->     0:39      1:367     2:494     3:495     4:478     5:416     6:433     7:554     8:196     9:195 
Row: 8 ->     0:164     1:436     2:494     3:495     4:478     5:416     6:434     7:325     8:532     9:105 
Row: 9 ->     0:176     1:436     2:494     3:495     4:478     5:416     6:433     7:323     8:345     9:503 
Total iterations = 26054
Pivots per section = [ 39, 241, 245, 239, 234, 186, 199, 97, 192, 69 ]
Total pivots = 1741
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:274     1:116     2:104     3:75      4:48      5:116     6:1       7:118     8:7       9:114 
Row: 1 ->     0:176     1:624     2:26      3:25      4:25      5:28      6:25      7:26      8:26      9:25  
Row: 2 ->     0:176     1:436     2:746     3:53      4:53      5:54      6:52      7:52      8:55      9:51  
Row: 3 ->     0:176     1:436     2:494     3:719     4:45      5:45      6:44      7:45      8:44      9:43  
Row: 4 ->     0:176     1:436     2:494     3:495     4:697     5:44      6:41      7:43      8:41      9:41  
Row: 5 ->     0:39      1:367     2:494     3:495     4:478     5:614     6:94      7:100     8:95      9:95  
Row: 6 ->     0:39      1:367     2:494     3:495     4:478     5:416     6:615     7:109     8:110     9:109 
Row: 7 ->     0:39      1:367     2:494     3:495     4:478     5:416     6:433     7:554     8:196     9:195 
Row: 8 ->     0:164     1:436     2:494     3:495     4:478     5:416     6:434     7:325     8:532     9:105 
Row: 9 ->     0:176     1:436     2:494     3:495     4:478     5:416     6:433     7:323     8:345     9:503 
Total iterations = 26054
Pivots per section = [ 39, 241, 245, 239, 234, 186, 199, 97, 192, 69 ]
Total pivots = 1741
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    orani678.mtx        double          2529          2529         90158                       ICM_32 PP           GPU  2.071724e+00           nan           nan     1           N/A        8.526241e+12            2.357483e-03


St čen 21 10:47:36 CEST 2023
-> Running benchmark for: ./mtx-matrices/sinc15/sinc15.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2047    1:232     2:189     3:165     4:25      5:193     6:134     7:1       8:1       9:1      10:1      11:1   
Row: 1 ->     0:2004    1:3014    2:224     3:219     4:220     5:233     6:230     7:186     8:1       9:1      10:1      11:1   
Row: 2 ->     0:2004    1:2001    2:2664    3:728     4:738     5:723     6:721     7:718     8:1       9:1      10:1      11:1   
Row: 3 ->     0:2004    1:2001    2:1661    3:2188    4:973     5:973     6:973     7:972     8:1       9:1      10:1      11:1   
Row: 4 ->     0:1117    1:2001    2:1661    3:1191    4:2176    5:993     6:993     7:993     8:1       9:1      10:1      11:1   
Row: 5 ->     0:2034    1:2001    2:1661    3:1191    4:1164    5:2156    6:798     7:799     8:119     9:65     10:1      11:1   
Row: 6 ->     0:1024    1:1004    2:650     3:217     4:159     5:536     6:2047    7:178     8:175     9:166    10:141    11:81  
Row: 7 ->     0:1024    1:1004    2:650     3:217     4:159     5:882     6:2017    7:2857    8:322     9:349    10:345    11:332 
Row: 8 ->     0:1024    1:1004    2:650     3:217     4:159     5:912     6:2017    7:1931    8:2219    9:980    10:980    11:979 
Row: 9 ->     0:1024    1:1004    2:650     3:217     4:159     5:536     6:1462    7:1931    8:1218    9:2405   10:936    11:933 
Row: 10 ->     0:1957    1:2001    2:1661    3:1191    4:1164    5:1529    6:2047    7:1931    8:1218    9:1393   10:2080   11:990 
Row: 11 ->     0:1024    1:1004    2:650     3:217     4:159     5:912     6:2047    7:1931    8:1218    9:1393   10:1077   11:532 
Total iterations = 127902
Pivots per section = [ 1024, 1004, 650, 216, 158, 536, 1024, 935, 230, 390, 87, 11 ]
Total pivots = 6265
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2047    1:232     2:189     3:165     4:25      5:193     6:134     7:1       8:1       9:1      10:1      11:1   
Row: 1 ->     0:2004    1:3014    2:224     3:219     4:220     5:233     6:230     7:186     8:1       9:1      10:1      11:1   
Row: 2 ->     0:2004    1:2001    2:2664    3:728     4:738     5:723     6:721     7:718     8:1       9:1      10:1      11:1   
Row: 3 ->     0:2004    1:2001    2:1661    3:2188    4:973     5:973     6:973     7:972     8:1       9:1      10:1      11:1   
Row: 4 ->     0:1117    1:2001    2:1661    3:1191    4:2176    5:993     6:993     7:993     8:1       9:1      10:1      11:1   
Row: 5 ->     0:2034    1:2001    2:1661    3:1191    4:1164    5:2156    6:798     7:799     8:119     9:65     10:1      11:1   
Row: 6 ->     0:1024    1:1004    2:650     3:217     4:159     5:536     6:2047    7:178     8:175     9:166    10:141    11:81  
Row: 7 ->     0:1024    1:1004    2:650     3:217     4:159     5:882     6:2017    7:2857    8:322     9:349    10:345    11:332 
Row: 8 ->     0:1024    1:1004    2:650     3:217     4:159     5:912     6:2017    7:1931    8:2219    9:980    10:980    11:979 
Row: 9 ->     0:1024    1:1004    2:650     3:217     4:159     5:536     6:1462    7:1931    8:1218    9:2405   10:936    11:933 
Row: 10 ->     0:1957    1:2001    2:1661    3:1191    4:1164    5:1529    6:2047    7:1931    8:1218    9:1393   10:2080   11:990 
Row: 11 ->     0:1024    1:1004    2:650     3:217     4:159     5:912     6:2047    7:1931    8:1218    9:1393   10:1077   11:532 
Total iterations = 127902
Pivots per section = [ 1024, 1004, 650, 216, 158, 536, 1024, 935, 230, 390, 87, 11 ]
Total pivots = 6265
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                      sinc15.mtx        double         11532         11532        551184                       ICM_32 PP           GPU  2.904034e+02           nan           nan     1           N/A        1.093219e+13            1.152344e+00


St čen 21 12:21:06 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-20_2_2.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:31      1:23      2:23      3:24      4:23  
Row: 1 ->     0:22      1:36      2:29      3:29      4:29  
Row: 2 ->     0:22      1:29      2:36      3:28      4:28  
Row: 3 ->     0:23      1:28      2:29      3:36      4:28  
Row: 4 ->     0:23      1:28      2:28      3:27      4:50  
Total iterations = 712
Pivots per section = [ 0, 0, 0, 0, 1 ]
Total pivots = 1
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:31      1:23      2:23      3:24      4:23  
Row: 1 ->     0:22      1:36      2:29      3:29      4:29  
Row: 2 ->     0:22      1:29      2:36      3:28      4:28  
Row: 3 ->     0:23      1:28      2:29      3:36      4:28  
Row: 4 ->     0:23      1:28      2:28      3:27      4:50  
Total iterations = 712
Pivots per section = [ 0, 0, 0, 0, 1 ]
Total pivots = 1
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                  poc-20_2_2.mtx        double          1274          1274       1304296                       ICM_32 PP           GPU  5.629677e-02           nan           nan     1           N/A        7.015499e+04            2.328306e-10


St čen 21 12:21:12 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-24_2_2.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:27      1:24      2:23      3:22      4:22      5:22      6:21      7:22  
Row: 1 ->     0:22      1:34      2:26      3:27      4:27      5:27      6:26      7:26  
Row: 2 ->     0:22      1:27      2:37      3:28      4:28      5:27      6:30      7:26  
Row: 3 ->     0:21      1:26      2:28      3:34      4:28      5:28      6:28      7:26  
Row: 4 ->     0:22      1:26      2:27      3:29      4:29      5:25      6:25      7:23  
Row: 5 ->     0:21      1:27      2:27      3:27      4:25      5:42      6:31      7:29  
Row: 6 ->     0:21      1:27      2:27      3:28      4:24      5:31      6:44      7:33  
Row: 7 ->     0:20      1:25      2:26      3:26      4:22      5:30      6:32      7:29  
Total iterations = 1722
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:27      1:24      2:23      3:22      4:22      5:22      6:21      7:22  
Row: 1 ->     0:22      1:34      2:26      3:27      4:27      5:27      6:26      7:26  
Row: 2 ->     0:22      1:27      2:37      3:28      4:28      5:27      6:30      7:26  
Row: 3 ->     0:21      1:26      2:28      3:34      4:28      5:28      6:28      7:26  
Row: 4 ->     0:22      1:26      2:27      3:29      4:29      5:25      6:25      7:23  
Row: 5 ->     0:21      1:27      2:27      3:27      4:25      5:42      6:31      7:29  
Row: 6 ->     0:21      1:27      2:27      3:28      4:24      5:31      6:44      7:33  
Row: 7 ->     0:20      1:25      2:26      3:26      4:22      5:30      6:32      7:29  
Total iterations = 1722
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                  poc-24_2_2.mtx        double          1814          1814       2749120                       ICM_32 PP           GPU  1.329712e-01           nan           nan     1           N/A        1.481084e+05            2.910383e-11


St čen 21 12:21:23 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-28_2_2.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:26      1:24      2:22      3:22      4:22      5:21      6:23      7:22      8:22      9:21  
Row: 1 ->     0:22      1:33      2:26      3:26      4:26      5:27      6:26      7:26      8:26      9:26  
Row: 2 ->     0:22      1:26      2:32      3:27      4:28      5:27      6:27      7:27      8:26      9:27  
Row: 3 ->     0:21      1:25      2:27      3:33      4:28      5:27      6:29      7:26      8:27      9:28  
Row: 4 ->     0:21      1:27      2:26      3:27      4:33      5:28      6:28      7:27      8:27      9:27  
Row: 5 ->     0:21      1:26      2:27      3:27      4:27      5:32      6:27      7:28      8:27      9:27  
Row: 6 ->     0:21      1:25      2:27      3:28      4:27      5:27      6:30      7:24      8:24      9:24  
Row: 7 ->     0:21      1:26      2:26      3:28      4:27      5:27      6:24      7:40      8:30      9:30  
Row: 8 ->     0:20      1:25      2:26      3:28      4:27      5:29      6:23      7:30      8:40      9:31  
Row: 9 ->     0:20      1:25      2:26      3:28      4:26      5:27      6:24      7:30      8:30      9:45  
Total iterations = 2665
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:26      1:24      2:22      3:22      4:22      5:21      6:23      7:22      8:22      9:21  
Row: 1 ->     0:22      1:33      2:26      3:26      4:26      5:27      6:26      7:26      8:26      9:26  
Row: 2 ->     0:22      1:26      2:32      3:27      4:28      5:27      6:27      7:27      8:26      9:27  
Row: 3 ->     0:21      1:25      2:27      3:33      4:28      5:27      6:29      7:26      8:27      9:28  
Row: 4 ->     0:21      1:27      2:26      3:27      4:33      5:28      6:28      7:27      8:27      9:27  
Row: 5 ->     0:21      1:26      2:27      3:27      4:27      5:32      6:27      7:28      8:27      9:27  
Row: 6 ->     0:21      1:25      2:27      3:28      4:27      5:27      6:30      7:24      8:24      9:24  
Row: 7 ->     0:21      1:26      2:26      3:28      4:27      5:27      6:24      7:40      8:30      9:30  
Row: 8 ->     0:20      1:25      2:26      3:28      4:27      5:29      6:23      7:30      8:40      9:31  
Row: 9 ->     0:20      1:25      2:26      3:28      4:26      5:27      6:24      7:30      8:30      9:45  
Total iterations = 2665
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                  poc-28_2_2.mtx        double          2450          2450       5153080                       ICM_32 PP           GPU  2.130607e-01           nan           nan     1           N/A        2.782024e+05            1.164153e-10


St čen 21 12:21:47 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-32_2_2.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:28      1:24      2:24      3:23      4:22      5:23      6:22      7:23      8:23      9:22  
Row: 1 ->     0:23      1:34      2:28      3:28      4:27      5:27      6:26      7:27      8:27      9:28  
Row: 2 ->     0:22      1:27      2:34      3:28      4:28      5:27      6:28      7:28      8:28      9:27  
Row: 3 ->     0:22      1:27      2:28      3:34      4:28      5:28      6:29      7:28      8:28      9:29  
Row: 4 ->     0:21      1:26      2:29      3:28      4:35      5:29      6:28      7:29      8:28      9:28  
Row: 5 ->     0:22      1:27      2:27      3:27      4:28      5:35      6:30      7:29      8:30      9:29  
Row: 6 ->     0:22      1:26      2:28      3:28      4:29      5:28      6:28      7:24      8:26      9:26  
Row: 7 ->     0:21      1:27      2:27      3:29      4:28      5:29      6:24      7:43      8:32      9:31  
Row: 8 ->     0:21      1:26      2:28      3:28      4:28      5:29      6:24      7:31      8:43      9:33  
Row: 9 ->     0:22      1:26      2:27      3:27      4:28      5:29      6:25      7:31      8:33      9:54  
Total iterations = 2781
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:28      1:24      2:24      3:23      4:22      5:23      6:22      7:23      8:23      9:22  
Row: 1 ->     0:23      1:34      2:28      3:28      4:27      5:27      6:26      7:27      8:27      9:28  
Row: 2 ->     0:22      1:27      2:34      3:28      4:28      5:27      6:28      7:28      8:28      9:27  
Row: 3 ->     0:22      1:27      2:28      3:34      4:28      5:28      6:29      7:28      8:28      9:29  
Row: 4 ->     0:21      1:26      2:29      3:28      4:35      5:29      6:28      7:29      8:28      9:28  
Row: 5 ->     0:22      1:27      2:27      3:27      4:28      5:35      6:30      7:29      8:30      9:29  
Row: 6 ->     0:22      1:26      2:28      3:28      4:29      5:28      6:28      7:24      8:26      9:26  
Row: 7 ->     0:21      1:27      2:27      3:29      4:28      5:29      6:24      7:43      8:32      9:31  
Row: 8 ->     0:21      1:26      2:28      3:28      4:28      5:29      6:24      7:31      8:43      9:33  
Row: 9 ->     0:22      1:26      2:27      3:27      4:28      5:29      6:25      7:31      8:33      9:54  
Total iterations = 2781
Pivots per section = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 ]
Total pivots = 3
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                  poc-32_2_2.mtx        double          3182          3182       8868688                       ICM_32 PP           GPU  3.232576e-01           nan           nan     1           N/A        4.798872e+05            5.820766e-11


St čen 21 12:22:31 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-8_4_2-938719427.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:47  
Total iterations = 47
Pivots per section = [ 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:47  
Total iterations = 47
Pivots per section = [ 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
         poc-8_4_2-938719427.mtx        double           230           230         28960                       ICM_32 PP           GPU  3.247308e-03           nan           nan     1           N/A        3.144056e+03            4.547474e-13


St čen 21 12:22:32 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-8_4_2-938719741.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:39      1:29  
Row: 1 ->     0:28      1:30  
Total iterations = 126
Pivots per section = [ 0, 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:39      1:29  
Row: 1 ->     0:28      1:30  
Total iterations = 126
Pivots per section = [ 0, 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
         poc-8_4_2-938719741.mtx        double           298           298         54816                       ICM_32 PP           GPU  1.012361e-02           nan           nan     1           N/A        3.162274e+03            9.094947e-13


St čen 21 12:22:33 CEST 2023
-> Running benchmark for: ./mtx-matrices/sistek/poc-8_4_2-938719829.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:39      1:29  
Row: 1 ->     0:28      1:30  
Total iterations = 126
Pivots per section = [ 0, 0 ]
Total pivots = 0
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:39      1:29  
Row: 1 ->     0:28      1:30  
Total iterations = 126
Pivots per section = [ 0, 0 ]
Total pivots = 0
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
         poc-8_4_2-938719829.mtx        double           298           298         54816                       ICM_32 PP           GPU  9.688165e-03           nan           nan     1           N/A        3.162274e+03            9.094947e-13


St čen 21 12:22:33 CEST 2023
-> Running benchmark for: ./mtx-matrices/spaceShuttleEntry_3/spaceShuttleEntry_3.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:252     1:56      2:56      3:56      4:56      5:56      6:56      7:16  
Row: 1 ->     0:128     1:99      2:24      3:24      4:24      5:24      6:24      7:24  
Row: 2 ->     0:128     1:66      2:8       3:7       4:7       5:7       6:7       7:6   
Row: 3 ->     0:128     1:66      2:6       3:11      4:6       5:6       6:6       7:6   
Row: 4 ->     0:252     1:72      2:6       3:9       4:460     5:164     6:163     7:162 
Row: 5 ->     0:152     1:71      2:6       3:8       4:258     5:544     6:252     7:252 
Row: 6 ->     0:128     1:66      2:6       3:10      4:260     5:289     6:527     7:257 
Row: 7 ->     0:127     1:65      2:6       3:8       4:250     5:289     6:272     7:83  
Total iterations = 6920
Pivots per section = [ 127, 33, 0, 1, 35, 32, 15, 0 ]
Total pivots = 243
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:252     1:56      2:56      3:56      4:56      5:56      6:56      7:16  
Row: 1 ->     0:128     1:99      2:24      3:24      4:24      5:24      6:24      7:24  
Row: 2 ->     0:128     1:66      2:8       3:7       4:7       5:7       6:7       7:6   
Row: 3 ->     0:128     1:66      2:6       3:11      4:6       5:6       6:6       7:6   
Row: 4 ->     0:252     1:72      2:6       3:9       4:460     5:164     6:163     7:162 
Row: 5 ->     0:152     1:71      2:6       3:8       4:258     5:544     6:252     7:252 
Row: 6 ->     0:128     1:66      2:6       3:10      4:260     5:289     6:527     7:257 
Row: 7 ->     0:127     1:65      2:6       3:8       4:250     5:289     6:272     7:83  
Total iterations = 6920
Pivots per section = [ 127, 33, 0, 1, 35, 32, 15, 0 ]
Total pivots = 243
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
         spaceShuttleEntry_3.mtx        double          1834          1834         28757                       ICM_32 PP           GPU  6.785293e-01           nan           nan     1           N/A        1.391649e+09            2.622604e-06


St čen 21 12:22:44 CEST 2023
-> Running benchmark for: ./mtx-matrices/TSC_OPF_1047/TSC_OPF_1047.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:8       1:5       2:5       3:3       4:1       5:5       6:5       7:5       8:2       9:2   
Row: 1 ->     0:4       1:106     2:25      3:22      4:1       5:26      6:25      7:25      8:1       9:1   
Row: 2 ->     0:4       1:62      2:136     3:30      4:1       5:36      6:31      7:31      8:19      9:1   
Row: 3 ->     0:2       1:56      2:98      3:439     4:9       5:42      6:45      7:43      8:42      9:36  
Row: 4 ->     0:1       1:8       2:6       3:12      4:336     5:18      6:1       7:1       8:33      9:32  
Row: 5 ->     0:4       1:63      2:103     3:98      4:17      5:848     6:79      7:80      8:77      9:78  
Row: 6 ->     0:4       1:63      2:99      3:96      4:1       5:270     6:929     7:125     8:124     9:122 
Row: 7 ->     0:4       1:63      2:101     3:114     4:1       5:266     6:291     7:916     8:144     9:151 
Row: 8 ->     0:1       1:8       2:23      3:111     4:31      5:260     6:287     7:332     8:849     9:99  
Row: 9 ->     0:1       1:8       2:6       3:85      4:31      5:275     6:290     7:331     8:106     9:667 
Total iterations = 11020
Pivots per section = [ 0, 7, 5, 4, 0, 22, 20, 10, 0, 0 ]
Total pivots = 68
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:8       1:5       2:5       3:3       4:1       5:5       6:5       7:5       8:2       9:2   
Row: 1 ->     0:4       1:106     2:25      3:22      4:1       5:26      6:25      7:25      8:1       9:1   
Row: 2 ->     0:4       1:62      2:136     3:30      4:1       5:36      6:31      7:31      8:19      9:1   
Row: 3 ->     0:2       1:56      2:98      3:439     4:9       5:42      6:45      7:43      8:42      9:36  
Row: 4 ->     0:1       1:8       2:6       3:12      4:336     5:18      6:1       7:1       8:33      9:32  
Row: 5 ->     0:4       1:63      2:103     3:98      4:17      5:848     6:79      7:80      8:77      9:78  
Row: 6 ->     0:4       1:63      2:99      3:96      4:1       5:270     6:929     7:125     8:124     9:122 
Row: 7 ->     0:4       1:63      2:101     3:114     4:1       5:266     6:291     7:916     8:144     9:151 
Row: 8 ->     0:1       1:8       2:23      3:111     4:31      5:260     6:287     7:332     8:849     9:99  
Row: 9 ->     0:1       1:8       2:6       3:85      4:31      5:275     6:290     7:331     8:106     9:667 
Total iterations = 11020
Pivots per section = [ 0, 7, 5, 4, 0, 22, 20, 10, 0, 0 ]
Total pivots = 68
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                TSC_OPF_1047.mtx        double          8140          8140       2012833                       ICM_32 PP           GPU  2.071830e+01           nan           nan     1           N/A        6.282788e+07            4.768372e-07


St čen 21 12:30:13 CEST 2023
-> Running benchmark for: ./mtx-matrices/TSOPF_FS_b162_c1/TSOPF_FS_b162_c1.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:837     1:1       2:25      3:19      4:1       5:91      6:32      7:1       8:86      9:86     10:86  
Row: 1 ->     0:93      1:949     2:41      3:41      4:18      5:54      6:61      7:31      8:61      9:54     10:54  
Row: 2 ->     0:93      1:58      2:1110    3:37      4:37      5:49      6:37      7:56      8:49      9:56     10:47  
Row: 3 ->     0:49      1:41      2:184     3:2046    4:8       5:152     6:143     7:1       8:155     9:147    10:147 
Row: 4 ->     0:49      1:41      2:184     3:1024    4:2047    5:138     6:140     7:118     8:140     9:140    10:137 
Row: 5 ->     0:594     1:819     2:909     3:1295    4:1275    5:1249    6:82      7:83      8:103     9:98     10:98  
Row: 6 ->     0:261     1:630     2:242     3:1302    4:1275    5:649     6:524     7:17      8:22      9:20     10:15  
Row: 7 ->     0:49      1:253     2:832     3:1292    4:1296    5:647     6:371     7:544     8:21      9:26     10:24  
Row: 8 ->     0:597     1:301     2:341     3:1305    4:1275    5:655     6:371     7:367     8:1184    9:202    10:206 
Row: 9 ->     0:145     1:639     2:503     3:1292    4:1287    5:654     6:371     7:367     8:688     9:1323   10:258 
Row: 10 ->     0:145     1:41      2:720     3:1292    4:1284    5:655     6:371     7:367     8:684     9:765    10:808 
Total iterations = 49962
Pivots per section = [ 49, 40, 184, 1024, 1024, 353, 121, 104, 42, 44, 23 ]
Total pivots = 3008
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:837     1:1       2:25      3:19      4:1       5:91      6:32      7:1       8:86      9:86     10:86  
Row: 1 ->     0:93      1:949     2:41      3:41      4:18      5:54      6:61      7:31      8:61      9:54     10:54  
Row: 2 ->     0:93      1:58      2:1110    3:37      4:37      5:49      6:37      7:56      8:49      9:56     10:47  
Row: 3 ->     0:49      1:41      2:184     3:2046    4:8       5:152     6:143     7:1       8:155     9:147    10:147 
Row: 4 ->     0:49      1:41      2:184     3:1024    4:2047    5:138     6:140     7:118     8:140     9:140    10:137 
Row: 5 ->     0:594     1:819     2:909     3:1295    4:1275    5:1249    6:82      7:83      8:103     9:98     10:98  
Row: 6 ->     0:261     1:630     2:242     3:1302    4:1275    5:649     6:524     7:17      8:22      9:20     10:15  
Row: 7 ->     0:49      1:253     2:832     3:1292    4:1296    5:647     6:371     7:544     8:21      9:26     10:24  
Row: 8 ->     0:597     1:301     2:341     3:1305    4:1275    5:655     6:371     7:367     8:1184    9:202    10:206 
Row: 9 ->     0:145     1:639     2:503     3:1292    4:1287    5:654     6:371     7:367     8:688     9:1323   10:258 
Row: 10 ->     0:145     1:41      2:720     3:1292    4:1284    5:655     6:371     7:367     8:684     9:765    10:808 
Total iterations = 49962
Pivots per section = [ 49, 40, 184, 1024, 1024, 353, 121, 104, 42, 44, 23 ]
Total pivots = 3008
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
            TSOPF_FS_b162_c1.mtx        double         10798         10798        608540                       ICM_32 PP           GPU  1.022113e+02           nan           nan     1           N/A        1.030076e+07            2.793968e-09


St čen 21 13:16:48 CEST 2023
-> Running benchmark for: ./mtx-matrices/west0067/west0067.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:164 
Total iterations = 164
Pivots per section = [ 53 ]
Total pivots = 53
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:164 
Total iterations = 164
Pivots per section = [ 53 ]
Total pivots = 53
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    west0067.mtx        double            67            67           294                       ICM_32 PP           GPU  1.056857e-02           nan           nan     1           N/A        8.693984e+01            7.105427e-15


St čen 21 13:16:49 CEST 2023
-> Running benchmark for: ./mtx-matrices/west0156/west0156.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:285 
Total iterations = 285
Pivots per section = [ 148 ]
Total pivots = 148
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:285 
Total iterations = 285
Pivots per section = [ 148 ]
Total pivots = 148
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    west0156.mtx        double           156           156           362                       ICM_32 PP           GPU  2.246754e-02           nan           nan     1           N/A        8.375021e+13            1.421085e-14


St čen 21 13:16:50 CEST 2023
-> Running benchmark for: ./mtx-matrices/west0381/west0381.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:599     1:66  
Row: 1 ->     0:454     1:296 
Total iterations = 1415
Pivots per section = [ 252, 62 ]
Total pivots = 314
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:599     1:66  
Row: 1 ->     0:454     1:296 
Total iterations = 1415
Pivots per section = [ 252, 62 ]
Total pivots = 314
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
                    west0381.mtx        double           381           381          2134                       ICM_32 PP           GPU  1.068458e-01           nan           nan     1           N/A        2.635496e+10            2.047740e-05


St čen 21 13:16:51 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka10135_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2110    1:1025    2:1025    3:1025    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 1 ->     0:1087    1:2173    2:1025    3:1025    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 2 ->     0:1087    1:1150    2:2190    3:1024    4:1024    5:1024    6:1024    7:1025    8:1025    9:1024
Row: 3 ->     0:1087    1:1150    2:1167    3:2217    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 4 ->     0:1087    1:1150    2:1167    3:1194    4:2243    5:1024    6:1024    7:1024    8:1024    9:1024
Row: 5 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:2251    6:1015    7:1015    8:1015    9:1015
Row: 6 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:2275    7:1025    8:1025    9:1025
Row: 7 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:2287    8:1025    9:1025
Row: 8 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:1264    8:2290    9:1025
Row: 9 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:1264    8:1267    9:2075
Total iterations = 121065
Pivots per section = [ 63, 126, 142, 169, 195, 204, 227, 239, 242, 237 ]
Total pivots = 1844
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:2110    1:1025    2:1025    3:1025    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 1 ->     0:1087    1:2173    2:1025    3:1025    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 2 ->     0:1087    1:1150    2:2190    3:1024    4:1024    5:1024    6:1024    7:1025    8:1025    9:1024
Row: 3 ->     0:1087    1:1150    2:1167    3:2217    4:1025    5:1025    6:1025    7:1025    8:1025    9:1025
Row: 4 ->     0:1087    1:1150    2:1167    3:1194    4:2243    5:1024    6:1024    7:1024    8:1024    9:1024
Row: 5 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:2251    6:1015    7:1015    8:1015    9:1015
Row: 6 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:2275    7:1025    8:1025    9:1025
Row: 7 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:2287    8:1025    9:1025
Row: 8 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:1264    8:2290    9:1025
Row: 9 ->     0:1087    1:1150    2:1167    3:1194    4:1220    5:1228    6:1252    7:1264    8:1267    9:2075
Total iterations = 121065
Pivots per section = [ 63, 126, 142, 169, 195, 204, 227, 239, 242, 237 ]
Total pivots = 1844
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka10135_<-1000-1000>_pivoting.mtx        double         10135         10135     102713214                       ICM_32 PP           GPU  2.438424e+02           nan           nan     1           N/A        2.014600e+09            2.845170e-06


St čen 21 13:54:58 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka1157_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:522     1:257     2:257     3:257     4:257 
Row: 1 ->     0:267     1:529     2:257     3:257     4:257 
Row: 2 ->     0:267     1:274     2:534     3:257     4:257 
Row: 3 ->     0:267     1:274     2:279     3:535     4:257 
Row: 4 ->     0:267     1:274     2:279     3:280     4:277 
Total iterations = 7695
Pivots per section = [ 11, 17, 23, 23, 12 ]
Total pivots = 86
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:522     1:257     2:257     3:257     4:257 
Row: 1 ->     0:267     1:529     2:257     3:257     4:257 
Row: 2 ->     0:267     1:274     2:534     3:257     4:257 
Row: 3 ->     0:267     1:274     2:279     3:535     4:257 
Row: 4 ->     0:267     1:274     2:279     3:280     4:277 
Total iterations = 7695
Pivots per section = [ 11, 17, 23, 23, 12 ]
Total pivots = 86
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka1157_<-1000-1000>_pivoting.mtx        double          1157          1157       1338040                       ICM_32 PP           GPU  4.692981e-01           nan           nan     1           N/A        1.234143e+08            9.014025e-08


St čen 21 13:55:05 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka2599_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:582     1:289     2:289     3:289     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 1 ->     0:295     1:594     2:289     3:289     4:289     5:289     6:289     7:289     8:289     9:288 
Row: 2 ->     0:295     1:307     2:599     3:289     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 3 ->     0:295     1:307     2:312     3:605     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 4 ->     0:295     1:307     2:312     3:318     4:600     5:289     6:289     7:289     8:289     9:289 
Row: 5 ->     0:295     1:307     2:312     3:318     4:313     5:616     6:289     7:289     8:289     9:289 
Row: 6 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:617     7:289     8:289     9:289 
Row: 7 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:624     8:289     9:289 
Row: 8 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:337     8:628     9:289 
Row: 9 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:337     8:341     9:15  
Total iterations = 32573
Pivots per section = [ 7, 19, 23, 29, 24, 40, 41, 48, 52, 1 ]
Total pivots = 284
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:582     1:289     2:289     3:289     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 1 ->     0:295     1:594     2:289     3:289     4:289     5:289     6:289     7:289     8:289     9:288 
Row: 2 ->     0:295     1:307     2:599     3:289     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 3 ->     0:295     1:307     2:312     3:605     4:289     5:289     6:289     7:289     8:289     9:289 
Row: 4 ->     0:295     1:307     2:312     3:318     4:600     5:289     6:289     7:289     8:289     9:289 
Row: 5 ->     0:295     1:307     2:312     3:318     4:313     5:616     6:289     7:289     8:289     9:289 
Row: 6 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:617     7:289     8:289     9:289 
Row: 7 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:624     8:289     9:289 
Row: 8 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:337     8:628     9:289 
Row: 9 ->     0:295     1:307     2:312     3:318     4:313     5:329     6:330     7:337     8:341     9:15  
Total iterations = 32573
Pivots per section = [ 7, 19, 23, 29, 24, 40, 41, 48, 52, 1 ]
Total pivots = 284
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka2599_<-1000-1000>_pivoting.mtx        double          2599          2599       6753502                       ICM_32 PP           GPU  2.613115e+00           nan           nan     1           N/A        1.052090e+08            5.950142e-08


St čen 21 13:55:47 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka3839_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:783     1:385     2:385     3:385     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 1 ->     0:400     1:797     2:385     3:385     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 2 ->     0:400     1:414     2:801     3:384     4:384     5:385     6:385     7:384     8:385     9:384 
Row: 3 ->     0:400     1:414     2:418     3:811     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 4 ->     0:400     1:414     2:418     3:428     4:812     5:385     6:385     7:385     8:385     9:385 
Row: 5 ->     0:400     1:414     2:418     3:428     4:429     5:825     6:385     7:385     8:385     9:385 
Row: 6 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:832     7:385     8:385     9:385 
Row: 7 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:833     8:385     9:385 
Row: 8 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:450     8:832     9:385 
Row: 9 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:450     8:449     9:825 
Total iterations = 44487
Pivots per section = [ 16, 29, 34, 43, 44, 57, 64, 65, 64, 60 ]
Total pivots = 476
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:783     1:385     2:385     3:385     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 1 ->     0:400     1:797     2:385     3:385     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 2 ->     0:400     1:414     2:801     3:384     4:384     5:385     6:385     7:384     8:385     9:384 
Row: 3 ->     0:400     1:414     2:418     3:811     4:385     5:385     6:385     7:385     8:385     9:385 
Row: 4 ->     0:400     1:414     2:418     3:428     4:812     5:385     6:385     7:385     8:385     9:385 
Row: 5 ->     0:400     1:414     2:418     3:428     4:429     5:825     6:385     7:385     8:385     9:385 
Row: 6 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:832     7:385     8:385     9:385 
Row: 7 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:833     8:385     9:385 
Row: 8 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:450     8:832     9:385 
Row: 9 ->     0:400     1:414     2:418     3:428     4:429     5:442     6:449     7:450     8:449     9:825 
Total iterations = 44487
Pivots per section = [ 16, 29, 34, 43, 44, 57, 64, 65, 64, 60 ]
Total pivots = 476
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka3839_<-1000-1000>_pivoting.mtx        double          3839          3839      14736045                       ICM_32 PP           GPU  7.480308e+00           nan           nan     1           N/A        6.799189e+08            6.431166e-07


St čen 21 13:57:48 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka4156_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:852     1:417     2:417     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 1 ->     0:437     1:869     2:417     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 2 ->     0:437     1:454     2:877     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 3 ->     0:437     1:454     2:462     3:883     4:417     5:416     6:417     7:417     8:417     9:417 
Row: 4 ->     0:437     1:454     2:462     3:468     4:886     5:417     6:417     7:417     8:417     9:417 
Row: 5 ->     0:437     1:454     2:462     3:468     4:471     5:899     6:417     7:417     8:416     9:417 
Row: 6 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:904     7:417     8:417     9:417 
Row: 7 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:899     8:417     9:417 
Row: 8 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:484     8:898     9:417 
Row: 9 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:484     8:483     9:905 
Total iterations = 48451
Pivots per section = [ 21, 38, 45, 51, 54, 67, 72, 67, 66, 81 ]
Total pivots = 562
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:852     1:417     2:417     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 1 ->     0:437     1:869     2:417     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 2 ->     0:437     1:454     2:877     3:417     4:417     5:417     6:417     7:417     8:417     9:417 
Row: 3 ->     0:437     1:454     2:462     3:883     4:417     5:416     6:417     7:417     8:417     9:417 
Row: 4 ->     0:437     1:454     2:462     3:468     4:886     5:417     6:417     7:417     8:417     9:417 
Row: 5 ->     0:437     1:454     2:462     3:468     4:471     5:899     6:417     7:417     8:416     9:417 
Row: 6 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:904     7:417     8:417     9:417 
Row: 7 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:899     8:417     9:417 
Row: 8 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:484     8:898     9:417 
Row: 9 ->     0:437     1:454     2:462     3:468     4:471     5:484     6:489     7:484     8:483     9:905 
Total iterations = 48451
Pivots per section = [ 21, 38, 45, 51, 54, 67, 72, 67, 66, 81 ]
Total pivots = 562
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka4156_<-1000-1000>_pivoting.mtx        double          4156          4156      17270197                       ICM_32 PP           GPU  9.501099e+00           nan           nan     1           N/A        1.107687e+08            1.778180e-07


St čen 21 14:00:20 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka5069_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1056    1:513     2:513     3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 1 ->     0:545     1:1060    2:513     3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 2 ->     0:545     1:549     2:1083    3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 3 ->     0:545     1:549     2:572     3:1085    4:513     5:513     6:513     7:513     8:513     9:513 
Row: 4 ->     0:545     1:549     2:572     3:574     4:1089    5:513     6:513     7:513     8:513     9:513 
Row: 5 ->     0:545     1:549     2:572     3:574     4:578     5:1112    6:513     7:513     8:513     9:513 
Row: 6 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:1114    7:513     8:513     9:513 
Row: 7 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:1109    8:507     9:507 
Row: 8 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:598     8:1122    9:513 
Row: 9 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:598     8:611     9:1012
Total iterations = 59570
Pivots per section = [ 33, 36, 59, 61, 66, 88, 90, 86, 98, 90 ]
Total pivots = 707
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1056    1:513     2:513     3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 1 ->     0:545     1:1060    2:513     3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 2 ->     0:545     1:549     2:1083    3:513     4:513     5:513     6:513     7:513     8:513     9:513 
Row: 3 ->     0:545     1:549     2:572     3:1085    4:513     5:513     6:513     7:513     8:513     9:513 
Row: 4 ->     0:545     1:549     2:572     3:574     4:1089    5:513     6:513     7:513     8:513     9:513 
Row: 5 ->     0:545     1:549     2:572     3:574     4:578     5:1112    6:513     7:513     8:513     9:513 
Row: 6 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:1114    7:513     8:513     9:513 
Row: 7 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:1109    8:507     9:507 
Row: 8 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:598     8:1122    9:513 
Row: 9 ->     0:545     1:549     2:572     3:574     4:578     5:601     6:603     7:598     8:611     9:1012
Total iterations = 59570
Pivots per section = [ 33, 36, 59, 61, 66, 88, 90, 86, 98, 90 ]
Total pivots = 707
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka5069_<-1000-1000>_pivoting.mtx        double          5069          5069      25692197                       ICM_32 PP           GPU  1.876806e+01           nan           nan     1           N/A        6.343784e+09            1.925057e-06


St čen 21 14:04:47 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka558_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:525     1:257     2:257 
Row: 1 ->     0:270     1:527     2:257 
Row: 2 ->     0:270     1:272     2:97  
Total iterations = 2732
Pivots per section = [ 14, 15, 5 ]
Total pivots = 34
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:525     1:257     2:257 
Row: 1 ->     0:270     1:527     2:257 
Row: 2 ->     0:270     1:272     2:97  
Total iterations = 2732
Pivots per section = [ 14, 15, 5 ]
Total pivots = 34
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka558_<-1000-1000>_pivoting.mtx        double           558           558        311090                       ICM_32 PP           GPU  1.604249e-01           nan           nan     1           N/A        5.534329e+06            9.611540e-09


St čen 21 14:04:49 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka6075_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1248    1:609     2:609     3:609     4:609     5:609     6:609     7:609     8:609     9:609 
Row: 1 ->     0:641     1:1273    2:609     3:609     4:609     5:609     6:609     7:609     8:609     9:609 
Row: 2 ->     0:641     1:666     2:1285    3:607     4:607     5:607     6:607     7:607     8:607     9:607 
Row: 3 ->     0:641     1:666     2:678     3:1293    4:608     5:608     6:608     7:608     8:608     9:608 
Row: 4 ->     0:641     1:666     2:678     3:686     4:1302    5:608     6:609     7:609     8:609     9:609 
Row: 5 ->     0:641     1:666     2:678     3:686     4:695     5:1312    6:609     7:609     8:609     9:609 
Row: 6 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:1314    7:600     8:600     9:600 
Row: 7 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:1326    8:609     9:609 
Row: 8 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:719     8:1337    9:609 
Row: 9 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:719     8:730     9:1335
Total iterations = 70925
Pivots per section = [ 33, 57, 69, 77, 86, 96, 98, 110, 122, 129 ]
Total pivots = 877
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1248    1:609     2:609     3:609     4:609     5:609     6:609     7:609     8:609     9:609 
Row: 1 ->     0:641     1:1273    2:609     3:609     4:609     5:609     6:609     7:609     8:609     9:609 
Row: 2 ->     0:641     1:666     2:1285    3:607     4:607     5:607     6:607     7:607     8:607     9:607 
Row: 3 ->     0:641     1:666     2:678     3:1293    4:608     5:608     6:608     7:608     8:608     9:608 
Row: 4 ->     0:641     1:666     2:678     3:686     4:1302    5:608     6:609     7:609     8:609     9:609 
Row: 5 ->     0:641     1:666     2:678     3:686     4:695     5:1312    6:609     7:609     8:609     9:609 
Row: 6 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:1314    7:600     8:600     9:600 
Row: 7 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:1326    8:609     9:609 
Row: 8 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:719     8:1337    9:609 
Row: 9 ->     0:641     1:666     2:678     3:686     4:695     5:705     6:707     7:719     8:730     9:1335
Total iterations = 70925
Pivots per section = [ 33, 57, 69, 77, 86, 96, 98, 110, 122, 129 ]
Total pivots = 877
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka6075_<-1000-1000>_pivoting.mtx        double          6075          6075      36902629                       ICM_32 PP           GPU  3.458070e+01           nan           nan     1           N/A        1.891735e+09            1.421967e-06


St čen 21 14:12:20 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka6192_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1306    1:641     2:641     3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 1 ->     0:668     1:1357    2:641     3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 2 ->     0:668     1:718     2:1347    3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 3 ->     0:668     1:718     2:708     3:1377    4:641     5:641     6:641     7:641     8:641     9:641 
Row: 4 ->     0:668     1:718     2:708     3:738     4:1377    5:641     6:641     7:641     8:641     9:641 
Row: 5 ->     0:668     1:718     2:708     3:738     4:738     5:1392    6:641     7:641     8:641     9:641 
Row: 6 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:1397    7:641     8:641     9:641 
Row: 7 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:1402    8:641     9:641 
Row: 8 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:763     8:1401    9:641 
Row: 9 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:763     8:762     9:949 
Total iterations = 74554
Pivots per section = [ 29, 77, 68, 97, 97, 112, 117, 123, 121, 85 ]
Total pivots = 926
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1306    1:641     2:641     3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 1 ->     0:668     1:1357    2:641     3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 2 ->     0:668     1:718     2:1347    3:641     4:641     5:641     6:641     7:641     8:641     9:641 
Row: 3 ->     0:668     1:718     2:708     3:1377    4:641     5:641     6:641     7:641     8:641     9:641 
Row: 4 ->     0:668     1:718     2:708     3:738     4:1377    5:641     6:641     7:641     8:641     9:641 
Row: 5 ->     0:668     1:718     2:708     3:738     4:738     5:1392    6:641     7:641     8:641     9:641 
Row: 6 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:1397    7:641     8:641     9:641 
Row: 7 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:1402    8:641     9:641 
Row: 8 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:763     8:1401    9:641 
Row: 9 ->     0:668     1:718     2:708     3:738     4:738     5:753     6:758     7:763     8:762     9:949 
Total iterations = 74554
Pivots per section = [ 29, 77, 68, 97, 97, 112, 117, 123, 121, 85 ]
Total pivots = 926
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka6192_<-1000-1000>_pivoting.mtx        double          6192          6192      38337786                       ICM_32 PP           GPU  3.985295e+01           nan           nan     1           N/A        2.201189e+09            1.419467e-06


St čen 21 14:20:45 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka6574_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1385    1:673     2:673     3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 1 ->     0:714     1:1409    2:673     3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 2 ->     0:714     1:738     2:1431    3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 3 ->     0:714     1:738     2:760     3:1434    4:673     5:673     6:673     7:673     8:673     9:673 
Row: 4 ->     0:714     1:738     2:760     3:763     4:1458    5:673     6:673     7:673     8:673     9:673 
Row: 5 ->     0:714     1:738     2:760     3:763     4:787     5:1459    6:672     7:672     8:672     9:672 
Row: 6 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:1462    7:669     8:669     9:669 
Row: 7 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:1476    8:673     9:673 
Row: 8 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:805     8:1487    9:670 
Row: 9 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:805     8:816     9:1179
Total iterations = 78560
Pivots per section = [ 42, 65, 88, 91, 115, 116, 118, 132, 143, 127 ]
Total pivots = 1037
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1385    1:673     2:673     3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 1 ->     0:714     1:1409    2:673     3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 2 ->     0:714     1:738     2:1431    3:673     4:673     5:673     6:673     7:673     8:673     9:673 
Row: 3 ->     0:714     1:738     2:760     3:1434    4:673     5:673     6:673     7:673     8:673     9:673 
Row: 4 ->     0:714     1:738     2:760     3:763     4:1458    5:673     6:673     7:673     8:673     9:673 
Row: 5 ->     0:714     1:738     2:760     3:763     4:787     5:1459    6:672     7:672     8:672     9:672 
Row: 6 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:1462    7:669     8:669     9:669 
Row: 7 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:1476    8:673     9:673 
Row: 8 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:805     8:1487    9:670 
Row: 9 ->     0:714     1:738     2:760     3:763     4:787     5:788     6:791     7:805     8:816     9:1179
Total iterations = 78560
Pivots per section = [ 42, 65, 88, 91, 115, 116, 118, 132, 143, 127 ]
Total pivots = 1037
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka6574_<-1000-1000>_pivoting.mtx        double          6574          6574      43214237                       ICM_32 PP           GPU  4.868321e+01           nan           nan     1           N/A        1.508698e+09            1.424105e-06


St čen 21 14:30:38 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka665_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:522     1:257     2:257 
Row: 1 ->     0:267     1:525     2:257 
Row: 2 ->     0:267     1:270     2:319 
Total iterations = 2941
Pivots per section = [ 11, 14, 13 ]
Total pivots = 38
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:522     1:257     2:257 
Row: 1 ->     0:267     1:525     2:257 
Row: 2 ->     0:267     1:270     2:319 
Total iterations = 2941
Pivots per section = [ 11, 14, 13 ]
Total pivots = 38
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka665_<-1000-1000>_pivoting.mtx        double           665           665        441886                       ICM_32 PP           GPU  1.833411e-01           nan           nan     1           N/A        5.353344e+06            2.739853e-09


St čen 21 14:30:40 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka7510_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1581    1:769     2:769     3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 1 ->     0:814     1:1608    2:769     3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 2 ->     0:814     1:841     2:1649    3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 3 ->     0:814     1:841     2:882     3:1657    4:769     5:769     6:769     7:769     8:769     9:769 
Row: 4 ->     0:814     1:841     2:882     3:890     4:1663    5:769     6:769     7:769     8:769     9:769 
Row: 5 ->     0:814     1:841     2:882     3:890     4:896     5:1674    6:766     7:766     8:766     9:766 
Row: 6 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:1686    7:769     8:768     9:768 
Row: 7 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:1709    8:768     9:768 
Row: 8 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:942     8:1704    9:768 
Row: 9 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:942     8:937     9:1323
Total iterations = 90096
Pivots per section = [ 46, 72, 113, 121, 128, 138, 150, 173, 168, 127 ]
Total pivots = 1236
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1581    1:769     2:769     3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 1 ->     0:814     1:1608    2:769     3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 2 ->     0:814     1:841     2:1649    3:769     4:769     5:769     6:769     7:769     8:769     9:769 
Row: 3 ->     0:814     1:841     2:882     3:1657    4:769     5:769     6:769     7:769     8:769     9:769 
Row: 4 ->     0:814     1:841     2:882     3:890     4:1663    5:769     6:769     7:769     8:769     9:769 
Row: 5 ->     0:814     1:841     2:882     3:890     4:896     5:1674    6:766     7:766     8:766     9:766 
Row: 6 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:1686    7:769     8:768     9:768 
Row: 7 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:1709    8:768     9:768 
Row: 8 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:942     8:1704    9:768 
Row: 9 ->     0:814     1:841     2:882     3:890     4:896     5:907     6:919     7:942     8:937     9:1323
Total iterations = 90096
Pivots per section = [ 46, 72, 113, 121, 128, 138, 150, 173, 168, 127 ]
Total pivots = 1236
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka7510_<-1000-1000>_pivoting.mtx        double          7510          7510      56396360                       ICM_32 PP           GPU  7.971982e+01           nan           nan     1           N/A        6.258569e+09            2.995481e-06


St čen 21 14:46:13 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka7972_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1661    1:801     2:801     3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 1 ->     0:862     1:1685    2:801     3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 2 ->     0:862     1:886     2:1698    3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 3 ->     0:862     1:886     2:899     3:1733    4:801     5:801     6:801     7:801     8:801     9:801 
Row: 4 ->     0:862     1:886     2:899     3:934     4:1736    5:797     6:797     7:797     8:798     9:797 
Row: 5 ->     0:862     1:886     2:899     3:934     4:937     5:1744    6:800     7:800     8:800     9:800 
Row: 6 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:1755    7:801     8:801     9:801 
Row: 7 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:1766    8:801     9:801 
Row: 8 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:967     8:1771    9:801 
Row: 9 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:967     8:972     9:1713
Total iterations = 94266
Pivots per section = [ 62, 85, 98, 134, 136, 144, 155, 167, 171, 169 ]
Total pivots = 1321
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1661    1:801     2:801     3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 1 ->     0:862     1:1685    2:801     3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 2 ->     0:862     1:886     2:1698    3:801     4:801     5:801     6:801     7:801     8:801     9:801 
Row: 3 ->     0:862     1:886     2:899     3:1733    4:801     5:801     6:801     7:801     8:801     9:801 
Row: 4 ->     0:862     1:886     2:899     3:934     4:1736    5:797     6:797     7:797     8:798     9:797 
Row: 5 ->     0:862     1:886     2:899     3:934     4:937     5:1744    6:800     7:800     8:800     9:800 
Row: 6 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:1755    7:801     8:801     9:801 
Row: 7 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:1766    8:801     9:801 
Row: 8 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:967     8:1771    9:801 
Row: 9 ->     0:862     1:886     2:899     3:934     4:937     5:945     6:956     7:967     8:972     9:1713
Total iterations = 94266
Pivots per section = [ 62, 85, 98, 134, 136, 144, 155, 167, 171, 169 ]
Total pivots = 1321
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka7972_<-1000-1000>_pivoting.mtx        double          7972          7972      63548773                       ICM_32 PP           GPU  9.429145e+01           nan           nan     1           N/A        2.247414e+09            2.801303e-06


St čen 21 15:04:16 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka8385_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1791    1:865     2:865     3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 1 ->     0:928     1:1823    2:865     3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 2 ->     0:928     1:960     2:1854    3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 3 ->     0:928     1:960     2:991     3:1866    4:863     5:863     6:863     7:863     8:863     9:863 
Row: 4 ->     0:928     1:960     2:991     3:1003    4:1888    5:861     6:861     7:862     8:861     9:861 
Row: 5 ->     0:928     1:960     2:991     3:1003    4:1025    5:1881    6:860     7:861     8:860     9:860 
Row: 6 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1903    7:865     8:865     9:865 
Row: 7 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1912    8:865     9:865 
Row: 8 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1049    8:1929    9:865 
Row: 9 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1049    8:1066    9:1369
Total iterations = 101559
Pivots per section = [ 64, 95, 126, 138, 160, 153, 175, 184, 202, 152 ]
Total pivots = 1449
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1791    1:865     2:865     3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 1 ->     0:928     1:1823    2:865     3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 2 ->     0:928     1:960     2:1854    3:865     4:865     5:865     6:865     7:865     8:865     9:865 
Row: 3 ->     0:928     1:960     2:991     3:1866    4:863     5:863     6:863     7:863     8:863     9:863 
Row: 4 ->     0:928     1:960     2:991     3:1003    4:1888    5:861     6:861     7:862     8:861     9:861 
Row: 5 ->     0:928     1:960     2:991     3:1003    4:1025    5:1881    6:860     7:861     8:860     9:860 
Row: 6 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1903    7:865     8:865     9:865 
Row: 7 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1912    8:865     9:865 
Row: 8 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1049    8:1929    9:865 
Row: 9 ->     0:928     1:960     2:991     3:1003    4:1025    5:1018    6:1040    7:1049    8:1066    9:1369
Total iterations = 101559
Pivots per section = [ 64, 95, 126, 138, 160, 153, 175, 184, 202, 152 ]
Total pivots = 1449
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka8385_<-1000-1000>_pivoting.mtx        double          8385          8385      70304004                       ICM_32 PP           GPU  1.239868e+02           nan           nan     1           N/A        1.627137e+09            1.423371e-06


St čen 21 15:25:50 CEST 2023
-> Running benchmark for: ./mtx-matrices/ZCejka_dense/Cejka9234_<-1000-1000>_pivoting.mtx
-> log_file: ./log-files/decomposers-benchmark-double.log
Log file ./log-files/decomposers-benchmark-double.log exists and new logs will be appended.
-> Benchmark results are only available for 10 loops. Running benchmark for 'CM PP'...
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1917    1:929     2:929     3:929     4:929     5:929     6:929     7:929     8:929     9:929 
Row: 1 ->     0:990     1:1975    2:929     3:929     4:929     5:929     6:929     7:929     8:929     9:929 
Row: 2 ->     0:990     1:1048    2:1985    3:928     4:928     5:928     6:928     7:928     8:929     9:928 
Row: 3 ->     0:990     1:1048    2:1058    3:2004    4:927     5:927     6:928     7:927     8:927     9:927 
Row: 4 ->     0:990     1:1048    2:1058    3:1077    4:2020    5:929     6:929     7:929     8:929     9:929 
Row: 5 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:2046    6:929     7:929     8:929     9:929 
Row: 6 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:2036    7:929     8:929     9:929 
Row: 7 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:2056    8:929     9:929 
Row: 8 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:1129    8:2067    9:929 
Row: 9 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:1129    8:1140    9:1981
Total iterations = 109703
Pivots per section = [ 62, 119, 130, 149, 165, 190, 180, 201, 211, 217 ]
Total pivots = 1624
==================================================
========== Iterative & Pivoting Metrics ==========
Iterations per section = 
Row: 0 ->     0:1917    1:929     2:929     3:929     4:929     5:929     6:929     7:929     8:929     9:929 
Row: 1 ->     0:990     1:1975    2:929     3:929     4:929     5:929     6:929     7:929     8:929     9:929 
Row: 2 ->     0:990     1:1048    2:1985    3:928     4:928     5:928     6:928     7:928     8:929     9:928 
Row: 3 ->     0:990     1:1048    2:1058    3:2004    4:927     5:927     6:928     7:927     8:927     9:927 
Row: 4 ->     0:990     1:1048    2:1058    3:1077    4:2020    5:929     6:929     7:929     8:929     9:929 
Row: 5 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:2046    6:929     7:929     8:929     9:929 
Row: 6 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:2036    7:929     8:929     9:929 
Row: 7 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:2056    8:929     9:929 
Row: 8 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:1129    8:2067    9:929 
Row: 9 ->     0:990     1:1048    2:1058    3:1077    4:1093    5:1119    6:1109    7:1129    8:1140    9:1981
Total iterations = 109703
Pivots per section = [ 62, 119, 130, 149, 165, 190, 180, 201, 211, 217 ]
Total pivots = 1624
==================================================
                     matrix name     precision          rows       columns      nonzeros                          format     performer          time        stddev   stddev/time loops       speedup     Base MaxAbsDiff        Input MaxAbsDiff
Cejka9234_<-1000-1000>_pivoting.mtx        double          9234          9234      85262150                       ICM_32 PP           GPU  1.665185e+02           nan           nan     1           N/A        1.553179e+09            5.064900e-06


===== [ FINISH ] Benchmark (precision = double)
Elapsed: 6hrs 12min 59sec